// Add Youtube API Script
var tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var ec_player;
function ini_play_camper_video(video_id) {
	ec_player = new YT.Player('ec-player', {
		height: '100%',
		width: '100%',
		videoId: video_id,
		events: {
			'onReady': onPlayerReady,
			'onStateChange': onPlayerStateChange
		}
	});
	// Re-scale all YouTube videos
	$fluidEl = document.getElementById('ec-video-player');
	$("#ec-player").data('aspectRatio', this.height / this.width);
	$(".video-story-play-btn").hide();
}

function play_camper_video(elm,video_id) {
	if(ec_player){
		ec_player.loadVideoById(video_id);
	}else{
		ini_play_camper_video(video_id);
	}
	$(".active-video").removeClass("active-video");
	$(elm).addClass("active-video");
	$('html, body').animate({
		scrollTop: $("#ec-video-player").offset().top
	}, 1000);
}



// 4. The API will call this function when the video player is ready.
function onPlayerReady(event) {
	event.target.playVideo();
}

// 5. The API calls this function when the player's state changes.
//    The function indicates that when playing a video (state=1),
//    the player should play for six seconds and then stop.
var done = false;
function onPlayerStateChange(event) {
	if (event.data == YT.PlayerState.PLAYING && !done) {
		//setTimeout(stopVideo, 6000);
		done = true;
	}
}
function stopVideo() {
	ec_player.stopVideo();
}